Description:
  Definition of ECS cluser hosted by EC2 instances

Parameters:

  Environment: 
    Description: Choose the environment 
    ConstraintDescription: Select one option from the drop down menu
    Type: String 
    Default: dev
    AllowedValues:
      - dev
      - stg 
      - prod

  DesiredCapacity:
    Type: Number
    Default: 1
    Description: Number of EC2 instances to launch in your ECS cluster.

  MinSize:
    Type: Number
    Default: 1
    Description: Minimum number of EC2 instances that can be launched in the ECS cluster.

  MaxSize:
    Type: Number
    Default: 3
    Description: Maximum number of EC2 instances that can be launched in the ECS cluster.

  ECSAMI:
    Description: AMI ID
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2 

  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: [t2.micro, t2.small, t2.medium, t2.large]

Resources:

  ECSCluster:
    Type: AWS::ECS::Cluster

  ECSAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    DependsOn:
      - LaunchTemplate
    Properties:
      VPCZoneIdentifier: 
        - Fn::ImportValue:
            !Sub ${Environment}-private-subnetA
        - Fn::ImportValue:
            !Sub ${Environment}-private-subnetB
      MinSize: !Ref MinSize
      MaxSize: !Ref MaxSize
      DesiredCapacity: !Ref DesiredCapacity
      TargetGroupARNs: 
        - Fn::ImportValue:
            !Sub ${Environment}-alb-target-group-arn
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: 'true'

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    DependsOn:
      - EC2InstanceProfile
    Properties: 
      LaunchTemplateName: !Sub ${Environment}-ecs-hosts-launch-template
      LaunchTemplateData:
        ImageId: !Ref ECSAMI
        InstanceType: !Ref InstanceType
        IamInstanceProfile: 
          Arn: !GetAtt  [EC2InstanceProfile, 'Arn']
        SecurityGroupIds: 
          - !Ref EcsHostSG

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: ECSHost
      Path: /
      Roles: [!Ref 'EC2Role']

  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [ec2.amazonaws.com]
          Action: ['sts:AssumeRole']
      Path: /
      Policies:
      - PolicyName: ecs-service
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              - 'ecs:CreateCluster'
              - 'ecs:DeregisterContainerInstance'
              - 'ecs:DiscoverPollEndpoint'
              - 'ecs:Poll'
              - 'ecs:RegisterContainerInstance'
              - 'ecs:StartTelemetrySession'
              - 'ecs:Submit*'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
              - 'ecr:GetAuthorizationToken'
              - 'ecr:BatchGetImage'
              - 'ecr:GetDownloadUrlForLayer'
            Resource: '*'

# move to a specific template with all security groups together
  EcsHostSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to the ECS hosts that run containers
      VpcId: 
        Fn::ImportValue:
          !Sub ${Environment}-vpc

  EcsSGInALB:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress from the internet facing ALB
      GroupId: !Ref EcsHostSG
      IpProtocol: -1
      SourceSecurityGroupId: 
        Fn::ImportValue:
          !Sub ${Environment}-alb-sg

  EcsSGInSelf:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress from other hosts in the same security group
      GroupId: !Ref EcsHostSG
      IpProtocol: -1
      SourceSecurityGroupId: !Ref EcsHostSG

Outputs:

  ECSCluster:
    Description: A reference to the ECS Cluster
    Value: !Ref ECSCluster
    Export:
      Name: !Sub ${Environment}-ecs-cluster
